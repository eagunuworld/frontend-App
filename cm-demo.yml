apiVersion: apps/v1
kind: Deployment
metadata:
  name: springapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springapp
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 60
  template:
    metadata:
      name: springapp
      labels:
        app: springapp
    spec:
      containers:
      - name: springapp
        image: eagunuworld/eagunu-mongo-db:1
        ports:
        - containerPort: 8080
        env:
          - name: MONGO_DB_HOSTNAME
            value: mongo
          - name: MONGO_DB_USERNAME
            valueFrom:
              configMapKeyRef:
                name: username-pwd
                key: mongodb_username
          - name: MONGO_DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: username-pwd
                key: mongodb_password
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
spec:
  type: ClusterIP
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
    #nodePort: 33333

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: "mongo"
  replicas: 2
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        ports:
          - containerPort: 27017
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: username-pwd
                key: mongodb_username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: username-pwd
                key: mongodb_password
        volumeMounts:
          - name: mongo-persistent-storage
            mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongo-persistent-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  clusterIP: None
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongo
